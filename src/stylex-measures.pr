{* Generate MEASURES stylex tokens *}
{[ const currentBrand = ds.currentBrand() /]}
{[ inject "file-header-comment" context { "brandName": "stylex", "id": currentBrand.id, "type": "measures" } /]}

import { defineVars } from "@stylexjs/stylex";
{[ const groups = ds.tokenGroupsOfType("Measure", currentBrand.id) /]}
{[ const tokensByType = ds.tokensByType("Measure", currentBrand.id) /]}

{[ for category in stylexCategories ]}
{[ const categoryTokens = filterTokens(category, tokensByType) /]}

export const {{ stylexGroupName(behavior.measureTokenPrefix, category) }} = defineVars({
  {[ for token in categoryTokens ]}
  {[ inject "stylex-name-render" context {"token": token, "keepCategory": true} /]}: "var(--{[ inject "token-name-render" context token /]})",
  {[/]}
});
{[/]}
